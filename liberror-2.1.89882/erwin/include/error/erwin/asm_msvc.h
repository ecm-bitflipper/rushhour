/* -*- Mode: C -*-
 * Author:Henrik Theiling
 * Description:
 *     Assembly routines for the msvc:
 *
 * @@Begin: Licencing and Copying@@
 *
 * Copyright (c) Henrik Theiling
 * Licence Version 2, Special Version for Erwin.
 *
 * The term 'this software' used in the following, additional to its
 * usual usage, also includes the instantiated source files generated by
 * tools of this package.
 *
 * This software is provided 'as-is', without warranty of any kind,
 * express or implied.  In no event will the authors or copyright holders
 * be held liable for any damages arising from the use of this software.
 *
 * Permission is granted to anyone to use this software for any purpose,
 * including commercial applications, and to alter it and redistribute it
 * freely, subject to the following restrictions:
 *
 * 1. The origin of this software must not be misrepresented; you must
 * not claim that you wrote the original software. If you use this
 * software in a product, an acknowledgment in the product documentation
 * would be appreciated.
 *
 * 2. Altered source versions must be plainly marked as such, and must
 * not be misrepresented as being the original software.
 *
 * 3. You must not use any of the names of the authors or copyright
 * holders of the original software for advertising or publicity
 * pertaining to distribution without specific, written prior permission.
 *
 * 4. If you change this software and redistribute parts or all of it in
 * any form, you must make the source code of the altered version of this
 * software available.  As an exception, files that were generated by
 * tools of this package may be used freely, including modification.
 *
 * 5. This notice must not be removed or altered from any source
 * distribution.
 *
 * This licence is governed by the Laws of Germany.  Disputes shall be
 * settled by Saarbruecken City Court.
 *
 * @@End: Licencing and Copying@@
 *
 */

#ifdef ERWIN_DEBUG_INCLUDE
#warning "Including asm_msvc.h."
#endif

#ifndef ERR_ERWIN_ASM_MSVC_H
#define ERR_ERWIN_ASM_MSVC_H

#ifdef ERWIN_DEBUG_INCLUDE
#warning "First inclusion of asm_msvc.h."
#endif

#ifdef _M_IX86

/* ********************************************************************** */
#define err_erwin_mulh32_defined 1

ERWIN_WRAPPER ERWIN_U32 err_erwin_mulh32 (ERWIN_U32 i, ERWIN_U32 m)
{
    __asm
    {
        mov   eax, i
        mov   edx, m
        mul   edx
        mov   eax, edx
    };
}

/* ********************************************************************** */
#define err_erwin_count_bits_non0_defined 1

ERWIN_WRAPPER int err_erwin_count_bits_non0_aux (unsigned long x)
{
    __asm
    {
        bsr   eax, x
    };
}

ERWIN_WRAPPER int err_erwin_count_bits_non0 (unsigned long x)
{
    return err_erwin_count_bits_non0_aux(x)+1;
}

/* ********************************************************************** */
#define err_erwin_trailing_0s_non0_defined 1

ERWIN_WRAPPER int err_erwin_trailing_0s_non0 (unsigned long x)
{
    __asm
    {
        bsf   eax, x
    };
}

/* ********************************************************************** */
#if _M_IX86 >= 500
#define err_erwin_swap32_defined 1

ERWIN_WRAPPER ERWIN_U32 err_erwin_swap32 (ERWIN_U32 x)
{
    __asm
    {
        mov   eax, x
        bswap eax
    };
}
#endif /* _M_IX86 >= 500 */
/* ********************************************************************** */
#define err_erwin_rol16_defined 1

ERWIN_WRAPPER ERWIN_U16 err_erwin_rol16 (ERWIN_U16 x, unsigned n)
{
    __asm
    {
        mov   ax,  x
        mov   ecx, n
        rol   ax,  cl
    };
}

/* ********************************************************************** */
#define err_erwin_ror16_defined 1

ERWIN_WRAPPER ERWIN_U16 err_erwin_ror16 (ERWIN_U16 x, unsigned n)
{
    __asm
    {
        mov   ax, x
        mov   ecx, n
        ror   ax, cl
    };
}

/* ********************************************************************** */
#define err_erwin_rol1_16_defined 1

ERWIN_WRAPPER ERWIN_U16 err_erwin_rol1_16 (ERWIN_U16 x)
{
    __asm
    {
        mov   ax, x
        rol   ax, 1
    };
}

/* ********************************************************************** */
#define err_erwin_ror1_16_defined 1

ERWIN_WRAPPER ERWIN_U16 err_erwin_ror1_16 (ERWIN_U16 x)
{
    __asm
    {
        mov   ax, x
        ror   ax, 1
    };
}

/* ********************************************************************** */
#define err_erwin_rol32_defined 1

ERWIN_WRAPPER ERWIN_U32 err_erwin_rol32 (ERWIN_U32 x, unsigned n)
{
    __asm
    {
        mov   eax, x
        mov   ecx, n
        rol   eax, cl
    };
}

/* ********************************************************************** */
#define err_erwin_ror32_defined 1

ERWIN_WRAPPER ERWIN_U32 err_erwin_ror32 (ERWIN_U32 x, unsigned n)
{
    __asm
    {
        mov   eax, x
        mov   ecx, n
        ror   eax, cl
    };
}

/* ********************************************************************** */
#define err_erwin_rol1_32_defined 1

ERWIN_WRAPPER ERWIN_U32 err_erwin_rol1_32 (ERWIN_U32 x)
{
    __asm
    {
        mov   eax, x
        rol   eax, 1
    };
}

/* ********************************************************************** */
#define err_erwin_ror1_32_defined 1

ERWIN_WRAPPER ERWIN_U32 err_erwin_ror1_32 (ERWIN_U32 x)
{
    __asm
    {
        mov   eax, x
        ror   eax, 1
    };
}

/* ********************************************************************** */

#endif /* _M_IX86 */

#endif /* ERR_ERWIN_ASM_MSVC_H */
