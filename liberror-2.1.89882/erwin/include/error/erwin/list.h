/*-*- Mode: C -*-*/
/*
 * Time-stamp: <Fri, 24 Aug 2007 18:00:21 +0200 theiling>
 * Author: Henrik Theiling
 * Description:
 *    Templates for doubly linked lists.
 *    Theses can also be used as stacks and queues.
 *
 * @@Begin: Licencing and Copying@@
 * 
 * Copyright (c) Henrik Theiling
 * Licence Version 2, Special Version for Erwin.
 * 
 * The term 'this software' used in the following, additional to its
 * usual usage, also includes the instantiated source files generated by
 * tools of this package.
 * 
 * This software is provided 'as-is', without warranty of any kind,
 * express or implied.  In no event will the authors or copyright holders
 * be held liable for any damages arising from the use of this software.
 * 
 * Permission is granted to anyone to use this software for any purpose,
 * including commercial applications, and to alter it and redistribute it
 * freely, subject to the following restrictions:
 * 
 * 1. The origin of this software must not be misrepresented; you must
 * not claim that you wrote the original software. If you use this
 * software in a product, an acknowledgment in the product documentation
 * would be appreciated.
 * 
 * 2. Altered source versions must be plainly marked as such, and must
 * not be misrepresented as being the original software.
 * 
 * 3. You must not use any of the names of the authors or copyright
 * holders of the original software for advertising or publicity
 * pertaining to distribution without specific, written prior permission.
 * 
 * 4. If you change this software and redistribute parts or all of it in
 * any form, you must make the source code of the altered version of this
 * software available.  As an exception, files that were generated by
 * tools of this package may be used freely, including modification.
 * 
 * 5. This notice must not be removed or altered from any source
 * distribution.
 * 
 * This licence is governed by the Laws of Germany.  Disputes shall be
 * settled by Saarbruecken City Court.
 * 
 * @@End: Licencing and Copying@@
 *
 * ---------------------------------------------------------------------- */
#ifdef ERWIN_DEBUG_INCLUDE
#warning "Including list.h."
#endif

#ifndef ERR_ERWIN_LIST_H
#define ERR_ERWIN_LIST_H

#ifdef ERWIN_DEBUG_INCLUDE
#warning "First inclusion of list.h."
#endif
#ifdef ERR_ERWIN_COMPILING
#  include "error/erwin/defs.h"
#else
#  include <error/erwin/defs.h>
#endif

#ifdef ERR_ERWIN_ADAM_NAME

#define err_erwininternallisterrno err_erwininternallisterrno
#define err_erwininternalliststrerror err_erwininternalliststrerror
#define ERR_ERWININTERNALLISTOK ERR_ERWININTERNALLISTOK
#define ERR_ERWININTERNALLISTISOK ERR_ERWININTERNALLISTISOK
#define ERR_ERWININTERNALLISTISERROR ERR_ERWININTERNALLISTISERROR
#define ERR_ERWININTERNALLISTISWARNING ERR_ERWININTERNALLISTISWARNING
#define ERR_ERWININTERNALLISTERRNOMEM ERR_ERWININTERNALLISTERRNOMEM
#define ERR_ERWININTERNALLISTERROUTOFRANGE ERR_ERWININTERNALLISTERROUTOFRANGE
#define ERR_ERWININTERNALLISTERRASSERTIONFAILED ERR_ERWININTERNALLISTERRASSERTIONFAILED
#define ERR_ERWININTERNALLISTERRNOTCOMPILED ERR_ERWININTERNALLISTERRNOTCOMPILED
#define ERR_ERWININTERNALLISTWARNOUTOFRANGE ERR_ERWININTERNALLISTWARNOUTOFRANGE
#define ERR_ERWININTERNALLISTWARNEMPTY ERR_ERWININTERNALLISTWARNEMPTY

#else /* !defined(ERR_ERWIN_ADAM_NAME) */

#ifdef __cplusplus
extern "C" {
#endif

/* must be in sync with list.c: */
#if !defined(ERR_ERWIN_THREAD_SAFE) || ERR_ERWIN_USE_THREAD_KEYWORD
extern ERR_ERWIN_THREAD_LOCAL int err_erwininternallisterrno;
#elif ERR_ERWIN_USE_PTHREAD
extern int *err_erwininternallisterrnoptr(void);
#define err_erwininternallisterrno (*err_erwininternallisterrnoptr())
#endif

extern char const *err_erwininternalliststrerror (int) ATTR_PURE;

#define ERR_ERWININTERNALLISTOK                  1

#define ERR_ERWININTERNALLISTISOK(X)             ((X) == ERR_ERWININTERNALLISTOK)
#define ERR_ERWININTERNALLISTISERROR(X)          ((X) <  ERR_ERWININTERNALLISTOK)
#define ERR_ERWININTERNALLISTISWARNING(X)        ((X) >  ERR_ERWININTERNALLISTOK)

#define ERR_ERWININTERNALLISTERRNOMEM            (-2)
#define ERR_ERWININTERNALLISTERROUTOFRANGE       (-4)
#define ERR_ERWININTERNALLISTERRASSERTIONFAILED  (-5)
#define ERR_ERWININTERNALLISTERRNOTCOMPILED      (-6)

#define ERR_ERWININTERNALLISTWARNOUTOFRANGE      3
        /* do not write +3, g++ 2.7.2.3 will not see that that is a constant! */
#define ERR_ERWININTERNALLISTWARNEMPTY           5

#ifdef __cplusplus
}
#endif

#endif /* defined(ERR_ERWIN_ADAM_NAME) */

#endif /* AI_ERWIN_LIST_H */
