/* -*- Mode: C -*-
 * Author:Henrik Theiling
 * Description:
 *     Assembly routines for the ppc:
 *
 * @@Begin: Licencing and Copying@@
 *
 * Copyright (c) Henrik Theiling
 * Licence Version 2, Special Version for Erwin.
 *
 * The term 'this software' used in the following, additional to its
 * usual usage, also includes the instantiated source files generated by
 * tools of this package.
 *
 * This software is provided 'as-is', without warranty of any kind,
 * express or implied.  In no event will the authors or copyright holders
 * be held liable for any damages arising from the use of this software.
 *
 * Permission is granted to anyone to use this software for any purpose,
 * including commercial applications, and to alter it and redistribute it
 * freely, subject to the following restrictions:
 *
 * 1. The origin of this software must not be misrepresented; you must
 * not claim that you wrote the original software. If you use this
 * software in a product, an acknowledgment in the product documentation
 * would be appreciated.
 *
 * 2. Altered source versions must be plainly marked as such, and must
 * not be misrepresented as being the original software.
 *
 * 3. You must not use any of the names of the authors or copyright
 * holders of the original software for advertising or publicity
 * pertaining to distribution without specific, written prior permission.
 *
 * 4. If you change this software and redistribute parts or all of it in
 * any form, you must make the source code of the altered version of this
 * software available.  As an exception, files that were generated by
 * tools of this package may be used freely, including modification.
 *
 * 5. This notice must not be removed or altered from any source
 * distribution.
 *
 * This licence is governed by the Laws of Germany.  Disputes shall be
 * settled by Saarbruecken City Court.
 *
 * @@End: Licencing and Copying@@
 *
 */

#ifdef ERWIN_DEBUG_INCLUDE
#warning "Including asm_ppc.h."
#endif

#ifndef ERR_ERWIN_ASM_PPC_H
#define ERR_ERWIN_ASM_PPC_H

#ifdef ERWIN_DEBUG_INCLUDE
#warning "First inclusion of asm_ppc.h."
#endif


/* ********************************************************************** */
#define err_erwin_mulh32_defined 1

ERWIN_WRAPPER ERWIN_U32 err_erwin_mulh32 (ERWIN_U32 i, ERWIN_U32 mod)
{
    ERWIN_U32 __result;
    __asm__ (
        "mulhwu %0, %1, %2"
        : "=&r" (__result)      /* outputs */
        : "r" (i), "r" (mod));  /* inputs */
    return __result;
}

#ifdef SIZEOF_LONG == 8 || SIZEOF_LONG == 4

/* ********************************************************************** */
#define err_erwin_count_bits_defined 1

ERWIN_WRAPPER int err_erwin_count_bits (unsigned long x)
{
  int __result;

# if SIZEOF_LONG == 8
  __asm__ ("cntlzd %0, %1"
         : "=&r" (__result)     /* output */
         : "r" (x));            /* input  */
# else
  __asm__ ("cntlzw %0, %1"
         : "=&r" (__result)     /* output */
         : "r" (x));            /* input  */
# endif

  return (SIZEOF_LONG * 8) - __result;
}


/* ********************************************************************** */
#define err_erwin_count_bits_non0_defined 1

ERWIN_WRAPPER int err_erwin_count_bits_non0 (unsigned long x)
{
  int __result;

# if SIZEOF_LONG == 8
  __asm__ ("cntlzd %0, %1"
         : "=&r" (__result)     /* output */
         : "r" (x));            /* input  */
# else
  __asm__ ("cntlzw %0, %1"
         : "=&r" (__result)     /* output */
         : "r" (x));            /* input  */
# endif

  return (SIZEOF_LONG * 8) - __result;
}

#endif /* SIZEOF_LONG == 8 || SIZEOF_LONG == 4 */
#endif /* ERR_ERWIN_ASM_PPC_H */
