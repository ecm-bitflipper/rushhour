/* -*- Mode: C -*- */
/* Author: Henrik Theiling
 * Description:
 *       The Erwin library for standard data structures and algorithms.
 *       This include file includes all forward declarations.
 *
 * @@Begin: Licencing and Copying@@
 * 
 * Copyright (c) Henrik Theiling
 * Licence Version 2, Special Version for Erwin.
 * 
 * The term 'this software' used in the following, additional to its
 * usual usage, also includes the instantiated source files generated by
 * tools of this package.
 * 
 * This software is provided 'as-is', without warranty of any kind,
 * express or implied.  In no event will the authors or copyright holders
 * be held liable for any damages arising from the use of this software.
 * 
 * Permission is granted to anyone to use this software for any purpose,
 * including commercial applications, and to alter it and redistribute it
 * freely, subject to the following restrictions:
 * 
 * 1. The origin of this software must not be misrepresented; you must
 * not claim that you wrote the original software. If you use this
 * software in a product, an acknowledgment in the product documentation
 * would be appreciated.
 * 
 * 2. Altered source versions must be plainly marked as such, and must
 * not be misrepresented as being the original software.
 * 
 * 3. You must not use any of the names of the authors or copyright
 * holders of the original software for advertising or publicity
 * pertaining to distribution without specific, written prior permission.
 * 
 * 4. If you change this software and redistribute parts or all of it in
 * any form, you must make the source code of the altered version of this
 * software available.  As an exception, files that were generated by
 * tools of this package may be used freely, including modification.
 * 
 * 5. This notice must not be removed or altered from any source
 * distribution.
 * 
 * This licence is governed by the Laws of Germany.  Disputes shall be
 * settled by Saarbruecken City Court.
 * 
 * @@End: Licencing and Copying@@
 *
 */

#ifdef ERWIN_DEBUG_INCLUDE
#warning "Including forwards.h."
#endif

#ifndef ERR_ERWIN_FORWARDS_H
#define ERR_ERWIN_FORWARDS_H

#ifdef ERWIN_DEBUG_INCLUDE
#warning "First inclusion of forwards.h."
#endif

/* @@Begin: #include@@ */
#ifdef ERR_ERWIN_COMPILING
#include "error/err_map_int_callback_f.h"
#else
#include <error/err_map_int_callback_f.h>
#endif
#ifdef ERR_ERWIN_COMPILING
#include "error/err_map_int_v_callback_f.h"
#else
#include <error/err_map_int_v_callback_f.h>
#endif
#ifdef ERR_ERWIN_COMPILING
#include "error/err_map_symbol_int_f.h"
#else
#include <error/err_map_symbol_int_f.h>
#endif
#ifdef ERR_ERWIN_COMPILING
#include "error/err_v_callback_f.h"
#else
#include <error/err_v_callback_f.h>
#endif
#ifdef ERR_ERWIN_COMPILING
#include "error/err_map_symbol_stream_f.h"
#else
#include <error/err_map_symbol_stream_f.h>
#endif
#ifdef ERR_ERWIN_COMPILING
#include "error/err_v_stream_f.h"
#else
#include <error/err_v_stream_f.h>
#endif
#ifdef ERR_ERWIN_COMPILING
#include "error/err_map_symbol_string_f.h"
#else
#include <error/err_map_symbol_string_f.h>
#endif
#ifdef ERR_ERWIN_COMPILING
#include "error/err_v_char_f.h"
#else
#include <error/err_v_char_f.h>
#endif
#ifdef ERR_ERWIN_COMPILING
#include "error/err_map_int_map_int_v_callback_f.h"
#else
#include <error/err_map_int_map_int_v_callback_f.h>
#endif
#ifdef ERR_ERWIN_COMPILING
#include "error/err_map_int_char_p_f.h"
#else
#include <error/err_map_int_char_p_f.h>
#endif
#ifdef ERR_ERWIN_COMPILING
#include "error/err_v_buffer_f.h"
#else
#include <error/err_v_buffer_f.h>
#endif
#ifdef ERR_ERWIN_COMPILING
#include "error/err_v_int_f.h"
#else
#include <error/err_v_int_f.h>
#endif
#ifdef ERR_ERWIN_COMPILING
#include "error/err_v_char_const_p_f.h"
#else
#include <error/err_v_char_const_p_f.h>
#endif
#ifdef ERR_ERWIN_COMPILING
#include "error/err_map_int_v_stream_f.h"
#else
#include <error/err_map_int_v_stream_f.h>
#endif
#ifdef ERR_ERWIN_COMPILING
#include "error/err_map_int_symbol_f.h"
#else
#include <error/err_map_int_symbol_f.h>
#endif
#ifdef ERR_ERWIN_COMPILING
#include "error/err_map_file_stream_f.h"
#else
#include <error/err_map_file_stream_f.h>
#endif
#ifdef ERR_ERWIN_COMPILING
#include "error/err_map_char_p_char_p_f.h"
#else
#include <error/err_map_char_p_char_p_f.h>
#endif
#ifdef ERR_ERWIN_COMPILING
#include "error/err_symtab_f.h"
#else
#include <error/err_symtab_f.h>
#endif
#ifdef ERR_ERWIN_COMPILING
#include "error/err_v_message_f.h"
#else
#include <error/err_v_message_f.h>
#endif
#ifdef ERR_ERWIN_COMPILING
#include "error/err_map_int_bool_f.h"
#else
#include <error/err_map_int_bool_f.h>
#endif
#ifdef ERR_ERWIN_COMPILING
#include "error/err_map_int_int_f.h"
#else
#include <error/err_map_int_int_f.h>
#endif
#ifdef __cplusplus
struct ErrErwinBase {
    typedef ErrMapIntMapIntVCallback MapIntMapIntVCallback; /*kind=aggregate*/
    typedef err_v_stream_t v_stream_t; /*kind=aggregate*/
    typedef ErrMapSymbolString MapSymbolString; /*kind=aggregate*/
    typedef err_map_int_char_p_t map_int_char_p_t; /*kind=aggregate*/
    typedef err_map_int_bool_t_const_p map_int_bool_t_const_p; /*kind=normal*/
    typedef ErrVMessage VMessage; /*kind=aggregate*/
    typedef ErrMapSymbolStream MapSymbolStream; /*kind=aggregate*/
    typedef err_map_symbol_stream_t map_symbol_stream_t; /*kind=aggregate*/
    typedef ErrVChar VChar; /*kind=aggregate*/
    typedef err_v_callback_t_p v_callback_t_p; /*kind=normal*/
    typedef err_map_symbol_int_t map_symbol_int_t; /*kind=aggregate*/
    typedef err_v_message_t_p v_message_t_p; /*kind=normal*/
    typedef err_v_char_t v_char_t; /*kind=aggregate*/
    typedef err_v_buffer_t v_buffer_t; /*kind=aggregate*/
    typedef err_symtab_t_const_p symtab_t_const_p; /*kind=normal*/
    typedef err_map_int_v_stream_t map_int_v_stream_t; /*kind=aggregate*/
    typedef err_v_callback_t_const_p v_callback_t_const_p; /*kind=normal*/
    typedef err_v_char_const_p_t_p v_char_const_p_t_p; /*kind=normal*/
    typedef err_v_buffer_t_p v_buffer_t_p; /*kind=normal*/
    typedef ErrVCallback VCallback; /*kind=aggregate*/
    typedef err_v_stream_t_p v_stream_t_p; /*kind=normal*/
    typedef err_symtab_t symtab_t; /*kind=aggregate*/
    typedef err_map_file_stream_t map_file_stream_t; /*kind=aggregate*/
    typedef err_map_int_callback_t_const_p map_int_callback_t_const_p; /*kind=normal*/
    typedef err_v_callback_t v_callback_t; /*kind=aggregate*/
    typedef ErrVCharConstP VCharConstP; /*kind=aggregate*/
    typedef ErrMapIntCharP MapIntCharP; /*kind=aggregate*/
    typedef err_map_int_int_t_const_p map_int_int_t_const_p; /*kind=normal*/
    typedef err_v_char_t_const_p v_char_t_const_p; /*kind=normal*/
    typedef ErrMapIntBool MapIntBool; /*kind=aggregate*/
    typedef err_v_buffer_t_const_p v_buffer_t_const_p; /*kind=normal*/
    typedef err_map_char_p_char_p_t_const_p map_char_p_char_p_t_const_p; /*kind=normal*/
    typedef err_v_char_const_p_t v_char_const_p_t; /*kind=aggregate*/
    typedef ErrMapIntCallback MapIntCallback; /*kind=aggregate*/
    typedef ErrVBuffer VBuffer; /*kind=aggregate*/
    typedef err_map_int_callback_t_p map_int_callback_t_p; /*kind=normal*/
    typedef ErrMapIntSymbol MapIntSymbol; /*kind=aggregate*/
    typedef err_map_symbol_string_t map_symbol_string_t; /*kind=aggregate*/
    typedef err_map_int_callback_t map_int_callback_t; /*kind=aggregate*/
    typedef err_map_symbol_int_t_p map_symbol_int_t_p; /*kind=normal*/
    typedef ErrMapIntInt MapIntInt; /*kind=aggregate*/
    typedef ErrSymtab Symtab; /*kind=aggregate*/
    typedef err_map_int_int_t map_int_int_t; /*kind=aggregate*/
    typedef err_map_int_map_int_v_callback_t map_int_map_int_v_callback_t; /*kind=aggregate*/
    typedef err_v_int_t_const_p v_int_t_const_p; /*kind=normal*/
    typedef err_map_int_int_t_p map_int_int_t_p; /*kind=normal*/
    typedef err_map_char_p_char_p_t_p map_char_p_char_p_t_p; /*kind=normal*/
    typedef err_map_symbol_string_t_const_p map_symbol_string_t_const_p; /*kind=normal*/
    typedef err_v_int_t_p v_int_t_p; /*kind=normal*/
    typedef err_map_int_char_p_t_const_p map_int_char_p_t_const_p; /*kind=normal*/
    typedef err_map_int_symbol_t map_int_symbol_t; /*kind=aggregate*/
    typedef err_v_stream_t_const_p v_stream_t_const_p; /*kind=normal*/
    typedef ErrMapCharPCharP MapCharPCharP; /*kind=aggregate*/
    typedef err_map_int_bool_t_p map_int_bool_t_p; /*kind=normal*/
    typedef ErrVStream VStream; /*kind=aggregate*/
    typedef err_v_int_t v_int_t; /*kind=aggregate*/
    typedef err_map_symbol_string_t_p map_symbol_string_t_p; /*kind=normal*/
    typedef err_v_char_t_p v_char_t_p; /*kind=normal*/
    typedef err_map_int_v_callback_t map_int_v_callback_t; /*kind=aggregate*/
    typedef err_map_char_p_char_p_t map_char_p_char_p_t; /*kind=aggregate*/
    typedef ErrMapFileStream MapFileStream; /*kind=aggregate*/
    typedef ErrMapSymbolInt MapSymbolInt; /*kind=aggregate*/
    typedef err_v_message_t v_message_t; /*kind=aggregate*/
    typedef err_map_symbol_int_t_const_p map_symbol_int_t_const_p; /*kind=normal*/
    typedef ErrMapIntVCallback MapIntVCallback; /*kind=aggregate*/
    typedef err_map_int_bool_t map_int_bool_t; /*kind=aggregate*/
    typedef err_v_message_t_const_p v_message_t_const_p; /*kind=normal*/
    typedef err_v_char_const_p_t_const_p v_char_const_p_t_const_p; /*kind=normal*/
    typedef ErrMapIntVStream MapIntVStream; /*kind=aggregate*/
    typedef err_symtab_t_p symtab_t_p; /*kind=normal*/
    typedef ErrVInt VInt; /*kind=aggregate*/
    typedef err_map_int_char_p_t_p map_int_char_p_t_p; /*kind=normal*/
};
#endif
#ifdef ERR__ERWIN_NAMESPACE
#    define MapIntMapIntVCallback ErrMapIntMapIntVCallback
#    define v_stream_t err_v_stream_t
#    define MapSymbolString ErrMapSymbolString
#    define map_int_char_p_t err_map_int_char_p_t
#    define map_int_bool_t_const_p err_map_int_bool_t_const_p
#    define VMessage ErrVMessage
#    define MapSymbolStream ErrMapSymbolStream
#    define map_symbol_stream_t err_map_symbol_stream_t
#    define VChar ErrVChar
#    define v_callback_t_p err_v_callback_t_p
#    define map_symbol_int_t err_map_symbol_int_t
#    define v_message_t_p err_v_message_t_p
#    define v_char_t err_v_char_t
#    define v_buffer_t err_v_buffer_t
#    define symtab_t_const_p err_symtab_t_const_p
#    define map_int_v_stream_t err_map_int_v_stream_t
#    define v_callback_t_const_p err_v_callback_t_const_p
#    define v_char_const_p_t_p err_v_char_const_p_t_p
#    define v_buffer_t_p err_v_buffer_t_p
#    define VCallback ErrVCallback
#    define v_stream_t_p err_v_stream_t_p
#    define symtab_t err_symtab_t
#    define map_file_stream_t err_map_file_stream_t
#    define map_int_callback_t_const_p err_map_int_callback_t_const_p
#    define v_callback_t err_v_callback_t
#    define VCharConstP ErrVCharConstP
#    define MapIntCharP ErrMapIntCharP
#    define map_int_int_t_const_p err_map_int_int_t_const_p
#    define v_char_t_const_p err_v_char_t_const_p
#    define MapIntBool ErrMapIntBool
#    define v_buffer_t_const_p err_v_buffer_t_const_p
#    define map_char_p_char_p_t_const_p err_map_char_p_char_p_t_const_p
#    define v_char_const_p_t err_v_char_const_p_t
#    define MapIntCallback ErrMapIntCallback
#    define VBuffer ErrVBuffer
#    define map_int_callback_t_p err_map_int_callback_t_p
#    define MapIntSymbol ErrMapIntSymbol
#    define map_symbol_string_t err_map_symbol_string_t
#    define map_int_callback_t err_map_int_callback_t
#    define map_symbol_int_t_p err_map_symbol_int_t_p
#    define MapIntInt ErrMapIntInt
#    define Symtab ErrSymtab
#    define map_int_int_t err_map_int_int_t
#    define map_int_map_int_v_callback_t err_map_int_map_int_v_callback_t
#    define v_int_t_const_p err_v_int_t_const_p
#    define map_int_int_t_p err_map_int_int_t_p
#    define map_char_p_char_p_t_p err_map_char_p_char_p_t_p
#    define map_symbol_string_t_const_p err_map_symbol_string_t_const_p
#    define v_int_t_p err_v_int_t_p
#    define map_int_char_p_t_const_p err_map_int_char_p_t_const_p
#    define map_int_symbol_t err_map_int_symbol_t
#    define v_stream_t_const_p err_v_stream_t_const_p
#    define MapCharPCharP ErrMapCharPCharP
#    define map_int_bool_t_p err_map_int_bool_t_p
#    define VStream ErrVStream
#    define v_int_t err_v_int_t
#    define map_symbol_string_t_p err_map_symbol_string_t_p
#    define v_char_t_p err_v_char_t_p
#    define map_int_v_callback_t err_map_int_v_callback_t
#    define map_char_p_char_p_t err_map_char_p_char_p_t
#    define MapFileStream ErrMapFileStream
#    define MapSymbolInt ErrMapSymbolInt
#    define v_message_t err_v_message_t
#    define map_symbol_int_t_const_p err_map_symbol_int_t_const_p
#    define MapIntVCallback ErrMapIntVCallback
#    define map_int_bool_t err_map_int_bool_t
#    define v_message_t_const_p err_v_message_t_const_p
#    define v_char_const_p_t_const_p err_v_char_const_p_t_const_p
#    define MapIntVStream ErrMapIntVStream
#    define symtab_t_p err_symtab_t_p
#    define VInt ErrVInt
#    define map_int_char_p_t_p err_map_int_char_p_t_p
#endif
/* @@End: #include@@ */

#endif
